#!/bin/bash

# Import colors
source ~/CLI-GPT/extras/colors

# Print Ascii Logo
echo -e "${BGreen}⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⣶⣶⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣾⣿⣿⠛⠛⠋⠛⠛⠻⣿⣿⣷⣄⣀⣤⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⠟⠁⠀⠀⠀⠀⠀⢀⣤⣶⣿⣿⣿⠿⠿⠿⢿⣿⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣶⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣶⡀⠀⠀⣶⣶⣶⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣀⣴⣶⣿⣿⠏⠀⠀⠀⢀⣠⣴⣿⣿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠉⢻⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⠀⠀⠀⢻⣷⠀⣷⠶⠻⣶⡄⢀⣶⠛⢳⣦⠀⣷⡶⠿⣷⡀⠀⢀⣿⠈⣿⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢀⣴⣿⣿⠿⠋⣿⣿⠀⠀⠀⣾⣿⣿⠛⠉⠀⠀⠀⠀⣠⣴⣶⣤⣀⠀⠀⠀⠀⠙⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⠀⠀⠀⣼⡿⢀⣿⠀⠀⣼⣿⢸⣿⠛⠛⠛⠀⣿⠀⠀⣿⡇⢀⣿⣷⣶⣿⣷⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣿⣿⠟⠀⠀⠀⣿⣿⠀⠀⠀⣿⣿⠀⠀⠀⣀⣴⣾⠿⠛⠉⠛⢿⣿⣿⣶⣤⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠛⠋⠀⢀⣿⠛⠛⠛⠀⠀⠛⠛⠛⠉⠀⠛⠀⠀⠛⠃⠚⠛⠀⠀⠀⠛⠂⠛⠛⠛⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣾⣿⡟⠀⠀⠀⠀⣿⣿⠀⠀⠀⣿⣿⣴⣾⢿⠛⠻⣿⣶⣤⠀⠀⠀⠀⠉⠛⢿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣿⣿⡇⠀⠀⠀⠀⣿⣿⠀⠀⠀⣿⣿⠉⠀⠀⠀⠀⠀⠈⢹⣿⣿⣶⣄⠀⠀⠀⠀⠉⢿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣀⠀⠀⠀⣴⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣄⣀⠀⠀⠀⢀⣀⣀⣀⣀⣀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀
⠀⠙⣿⣿⡀⠀⠀⠀⠻⣿⣶⣄⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠉⠛⢿⣷⣤⠀⠀⠀⠹⣿⣿⠀⠀⠀⠀⠀⠀⠀⣴⠟⠉⠀⠀⠈⠙⣷⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⢠⣿⠉⠀⠀⠀⠉⢿⣄⠀⢺⡇⠀⠀⠀⠈⠙⣷⠀⠀⠀⠀⣿⡇
⠀⠀⠙⣿⣿⣦⣀⠀⠀⠀⠈⠛⢿⣿⣿⣄⠀⠀⠀⠀⠀⢀⣼⣿⠀⠀⠀⢺⣿⣿⠀⠀⠀⠀⣿⣿⡆⠀⠀⠀⠀⠀⢠⣿⠀⠀⠀⠀⠀⠀⠉⠀⣿⣧⠛⠋⠋⢻⣦⠀⣴⠟⠋⠉⠛⣷⡀⠛⢻⡟⠛⠀⣿⡀⠀⠀⠀⠀⠀⠈⠉⠀⢺⡇⠀⠀⠀⠀⠀⣿⠃⠀⠀⠀⣿⡇⠀⠀⠀⠀
⠀⠀⠀⣿⣿⠿⣿⣿⣶⣤⠀⠀⠀⠀⠉⠛⢿⣷⣤⣶⣿⠿⢻⣿⠀⠀⠀⢺⣿⣿⠀⠀⠀⢀⣿⣿⠁⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⣿⠀⠈⢀⣀⣀⣀⣼⡇⠀⢸⡇⠀⠀⣿⠀⠀⠀⢠⣤⣤⣤⣤⠀⢺⣷⣴⣴⣴⠶⠿⠋⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀
⠀⠀⠀⣿⣿⡀⠀⠈⠛⢿⣿⣿⣶⣄⣀⣴⣿⠿⠋⠀⠀⠀⢸⣿⠀⠀⠀⢺⣿⣿⠀⠀⢀⣿⣿⠏⠀⠀⠀⠀⠀⠀⠈⣿⠀⠀⠀⠀⠀⠀⣶⠀⣿⡇⠀⠀⠀⠀⣿⠀⣾⠉⠀⠀⠀⢸⡇⠀⢸⡇⠀⠀⢿⣄⠀⠀⠀⠀⠀⢸⣿⠀⢺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀
⠀⠀⠀⢹⣿⣷⠀⠀⠀⠀⠀⠉⠛⠿⠋⠉⠀⠀⠀⢀⣤⣶⣿⣿⠀⠀⠀⣸⣿⣿⣴⣾⣿⡿⠉⠀⠀⠀⠀⠀⠀⠀⠀⡈⠻⣤⣄⣄⣤⡾⠋⠀⣿⡇⠀⠀⠀⠀⣿⠀⢿⣤⣄⣤⣴⢻⣇⠀⠹⣷⣄⡀⠀⠛⢶⣤⣄⣤⣤⣾⠋⠀⢺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠙⣿⣿⣤⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣿⣿⠿⠛⠉⠀⠀⠀⢀⣿⣿⠿⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠛⢿⣿⣿⣶⣶⣶⣶⣿⣿⣿⠛⠉⠀⠀⠀⠀⠀⠀⣠⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠛⣿⣿⣷⣶⣤⣤⣤⣴⣶⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠛⠛⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"

# Check for config file, if not there, create it
if [ -f ~/.config/cli-gpt.conf ]; then
    source ~/.config/cli-gpt.conf
else
    echo "ALWAYS_OVERWRITE_ALIASES=false" > ~/.config/cli-gpt.conf
    echo "ALWAYS_KEEP_API_KEY=false" >> ~/.config/cli-gpt.conf
    echo "UPDATE_NOTIFICATION=true" >> ~/.config/cli-gpt.conf
    source ~/.config/cli-gpt.conf
fi

# Grab current API key from gpt.py
current_key=$(grep "openai.api_key" ~/CLI-GPT/gpt.py | awk -F'"' '{print $2}')
cd $HOME
rm -rf CLI-GPT/

echo -e "\n${Cyan}Welcome to the updater for CLI-GPT!${Off}\n"

# Clone into Repo
git clone https://github.com/TETRA326/CLI-GPT.git

# Check for required packages
if python3 -c "import openai" &> /dev/null; then
    echo -e "${G}pip3 module 'openai' was found!${Off}"
else
    pip3 install openai
fi
if python3 -c "import colorama" &> /dev/null; then
    echo -e "${G}pip3 module 'colorama' was found!${Off}"
else
    pip3 install colorama
fi
if python3 -c "import requests" &> /dev/null; then
    echo -e "${G}pip3 module 'requests' was found!${Off}"
else
    pip3 install requests
fi

# Give script perms
chmod +x $HOME/CLI-GPT/update
chmod +x $HOME/CLI-GPT/settings
chmod +x $HOME/CLI-GPT/change-engine
chmod +x $HOME/CLI-GPT/tone
chmod +x $HOME/CLI-GPT/extras/defaults

# Check value from config
if [ "$ALWAYS_KEEP_API_KEY" == "true" ]; then
    sed -i "s/openai.api_key = \"\"/openai.api_key = \"$current_key\"/" ~/CLI-GPT/gpt.py
    echo -e "${Cyan}API Key kept!${Y}"
else
    # Ask to change key
    echo -e "\n${G}API Key found in 'gpt.py'! ${Black}${On_White}($current_key)${Off}${Y}"
    read -p "Do you want to change your OpenAI API key? (y/N): " update_key
    if [ "$update_key" == "y" ] || [ "$update_key" == "Y" ]; then
        echo -e "${Y}"
        read -p "Please enter your OpenAI API key ('CTRL + SHIFT + V' to paste): " key
        echo -e "${Off}"
        # Replace the API key in gpt.py
        sed -i "s/openai.api_key = \"\"/openai.api_key = \"$key\"/" ~/CLI-GPT/gpt.py
        echo -e "${G}API key successfully updated in 'gpt.py'${Y}"
    else
        sed -i "s/openai.api_key = \"\"/openai.api_key = \"$current_key\"/" ~/CLI-GPT/gpt.py
        echo -e "${Cyan}API Key kept!${Y}"
    fi
fi

# Attempt to remove old aliases in .bashrc
# Define alias pattern to look for
aliases=(
    "alias gpt"
)
# Loop through the aliases and remove them from ~/.bashrc
for alias in "${aliases[@]}"
do
    # Check if the pattern exists in ~/.bashrc
    if grep -q "^$alias" ~/.bashrc
    then
        # If the pattern exists, remove all lines that start with it
        sed -i "/^$alias/d" ~/.bashrc
        echo -e "${B}Removed old aliases from ${BBlue}'~/.bashrc'${Y}"
    fi
done

# Function for adding aliases to .bash_aliases
add_aliases () {
  echo -e "alias gpt='python3 ~/CLI-GPT/gpt.py'" > ~/.bash_aliases
  echo -e "alias gpt-update='bash ~/CLI-GPT/update && source ~/.bash_aliases'" >> ~/.bash_aliases
  echo -e "alias gpt-engine='bash ~/CLI-GPT/change-engine'" >> ~/.bash_aliases
  echo -e "alias gpt-tone='bash ~/CLI-GPT/tone'" >> ~/.bash_aliases
  echo -e "alias gpt-default='bash ~/CLI-GPT/extras/defaults'" >> ~/.bash_aliases
  echo -e "alias gpt-settings='bash ~/CLI-GPT/settings'" >> ~/.bash_aliases
  echo -e "${G}Aliases added successfully in ${BGreen}'~/.bash_aliases'${Off}"
}

# Check value from config
if [ "$ALWAYS_OVERWRITE_ALIASES" == "true" ]; then
    add_aliases
else
    # Ask to overwrite .bash_aliases
    echo -e "\nPlease understand ${BYellow}'~/.bash_aliases'${Off}${Y} will be overwritten! This is recommended for most users. "
    read -p "Do wish to continue? (Y/n): " overwrite_aliases

    if [ "$overwrite_aliases" == "n" ] || [ "$overwrite_aliases" == "N" ]; then
        echo -e "${R}NOTICE: update will continue, but new aliases will not be set!${Off}"
    else
        add_aliases
    fi
fi
echo -e "${G}Update complete!${Off}\n"

# List commands
echo -e "${B}Commands:"        
echo -e "${BBlue}gpt${B}           - begin ChatGPT conversation"
echo -e "${BBlue}gpt-update${B}    - update CLI-GPT code"
echo -e "${BBlue}gpt-settings${B}  - change CLI-GPT settings"
echo -e "${BBlue}gpt-default${B}   - revert engine, tone, and writing style to defaults"
echo -e "${Grey}gpt-tone      - moved to 'gpt-settings'"
echo -e "gpt-engine    - moved to 'gpt-settings'${Off}"
